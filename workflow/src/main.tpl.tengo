// Cell Ranger preprocessing workflow

wf := import("@platforma-sdk/workflow-tengo:workflow")

render := import("@platforma-sdk/workflow-tengo:render")
assets := import("@platforma-sdk/workflow-tengo:assets")
pframes := import("@platforma-sdk/workflow-tengo:pframes")
smart := import("@platforma-sdk/workflow-tengo:smart")

processTpl := assets.importTemplate(":process")

// wf.setPreRun(assets.importTemplate(":pre-run")) // monetization check

wf.body(func(args) {
	blockId := wf.getBlockId()
	species := args.species

	input := wf.resolve(args.ref, { errIfMissing: true })

	processRun := render.createEphemeral(processTpl, {
		inputSpec: input.getFutureInputField("spec"),
		inputData: input.getFutureInputField("data"),

		params: smart.createJsonResource({
			blockId: blockId,
			species: species,
			mem: args.mem,
			cpu: args.cpu
		})
	})

	return {
		outputs: {
			cellRangerProgress: processRun.output("cellRangerProgress"),
			cellRangerReport: pframes.exportColumnData(processRun.output("cellRangerReport")),
			rawCountsPf: pframes.exportFrame(processRun.output("rawCountsPf")),
			cellMetricsPf: pframes.exportFrame(processRun.output("cellMetricsPf")),
			summaryContent: processRun.output("summaryContent")
		},
		exports: {
			exports: processRun.output("exports"),
			cellMetricsPf: processRun.output("cellMetricsPf")
		}
	}
})
